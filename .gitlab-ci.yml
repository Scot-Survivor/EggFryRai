# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: openjdk:17-jdk-alpine3.14
stages:
  - build
  - test
  - deploy
  - distribute

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - chmod +x gradlew
  - mv dev-hibernate.properties hibernate.properties
  - apk add --no-cache binutils

cache:
  paths:
    - ".gradle/wrapper"
    - ".gradle/caches"

distribute:
  stage: distribute
  script:
    - "./gradlew shadowJar"
  artifacts:
    paths:
      - "./build/libs/*.jar"
    expire_in: 24 hours
  only:
    - main

package:
  stage: distribute
  artifacts:
    paths:
      - "./build/jpackage/*"
    expire_in: 24 hours
  script:
    - "./gradlew jpackage"
  allow_failure: true


test:
  stage: test
  script:
    - "./gradlew test --tests com.comp5590.tests.basic*"
  only:
    - main

include:
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Jobs/Secret-Detection.gitlab-ci.yml
